// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Booking {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  firstName      String
  lastName       String
  email          String
  phone          String
  additionalRequests String?
  flyFrequency   String
  flyingSolution String
  heardAbout     String
  status         String   @default("pending")
  flights        Flight[] 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Flight {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  bookingId      String   @db.ObjectId
  booking        Booking  @relation(fields: [bookingId], references: [id])
  from           String
  to             String
  departureDate  DateTime
  returnDate     DateTime?
  passengers     Int
  timeOfDay      String   
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model FlightSubscription {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  forename  String
  name      String
  email     String
  phone     String
  message   String
  likeFly   String
  descFly   String
  active    Process  @default(unlisted)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Flightmembership {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  firstName String
  lastName  String
  email     String
  phone     String
  message   String

  flyFrequency   String
  flyingSolution String
  heardAbout     String
  status         Process @default(unlisted)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

enum Status {
  pending
  onProcess
  delivered
}

enum Process {
  unlisted
  listed
}
